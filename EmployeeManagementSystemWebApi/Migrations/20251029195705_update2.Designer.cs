// <auto-generated />
using System;
using EmployeeManagementSystemWebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeManagementSystemWebApi.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    [Migration("20251029195705_update2")]
    partial class update2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeManagementSystemWebApi.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Attendances");
                });

            modelBuilder.Entity("EmployeeManagementSystemWebApi.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("EmployeeManagementSystemWebApi.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("JobRoleId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("JobRoleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("EmployeeManagementSystemWebApi.Models.EmployeeSalary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId1")
                        .HasColumnType("int");

                    b.Property<decimal>("HouseAllowance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MedicalAllowance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("ProvidentFundPercentage")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("TaxPercentage")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal>("TransportAllowance")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId")
                        .IsUnique();

                    b.HasIndex("EmployeeId1")
                        .IsUnique()
                        .HasFilter("[EmployeeId1] IS NOT NULL");

                    b.ToTable("EmployeeSalaries");
                });

            modelBuilder.Entity("EmployeeManagementSystemWebApi.Models.JobRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("JobRoles");
                });

            modelBuilder.Entity("EmployeeManagementSystemWebApi.Models.LeaveApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("LeaveApplications");
                });

            modelBuilder.Entity("EmployeeManagementSystemWebApi.Models.Payroll", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AbsenceDeduction")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("BaseSalaryPaid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("Bonus")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId1")
                        .HasColumnType("int");

                    b.Property<decimal>("HouseAllowancePaid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("MedicalAllowancePaid")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("OvertimePay")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PayMonth")
                        .HasColumnType("int");

                    b.Property<int>("PayYear")
                        .HasColumnType("int");

                    b.Property<decimal>("ProvidentFundDeduction")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxDeduction")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalDeductions")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalEarnings")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TransportAllowancePaid")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeeId1");

                    b.ToTable("Payrolls");
                });

            modelBuilder.Entity("EmployeeManagementSystemWebApi.Models.Attendance", b =>
                {
                    b.HasOne("EmployeeManagementSystemWebApi.Models.Employee", "Employee")
                        .WithMany("Attendances")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeManagementSystemWebApi.Models.Employee", b =>
                {
                    b.HasOne("EmployeeManagementSystemWebApi.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeManagementSystemWebApi.Models.JobRole", "JobRole")
                        .WithMany("Employees")
                        .HasForeignKey("JobRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("JobRole");
                });

            modelBuilder.Entity("EmployeeManagementSystemWebApi.Models.EmployeeSalary", b =>
                {
                    b.HasOne("EmployeeManagementSystemWebApi.Models.Employee", "Employee")
                        .WithOne()
                        .HasForeignKey("EmployeeManagementSystemWebApi.Models.EmployeeSalary", "EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeManagementSystemWebApi.Models.Employee", null)
                        .WithOne("EmployeeSalary")
                        .HasForeignKey("EmployeeManagementSystemWebApi.Models.EmployeeSalary", "EmployeeId1");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeManagementSystemWebApi.Models.LeaveApplication", b =>
                {
                    b.HasOne("EmployeeManagementSystemWebApi.Models.Employee", "Employee")
                        .WithMany("LeaveApplications")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeManagementSystemWebApi.Models.Payroll", b =>
                {
                    b.HasOne("EmployeeManagementSystemWebApi.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeeManagementSystemWebApi.Models.Employee", null)
                        .WithMany("Payrolls")
                        .HasForeignKey("EmployeeId1");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeManagementSystemWebApi.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("EmployeeManagementSystemWebApi.Models.Employee", b =>
                {
                    b.Navigation("Attendances");

                    b.Navigation("EmployeeSalary");

                    b.Navigation("LeaveApplications");

                    b.Navigation("Payrolls");
                });

            modelBuilder.Entity("EmployeeManagementSystemWebApi.Models.JobRole", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
